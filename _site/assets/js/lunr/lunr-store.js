var store = [{
        "title": "通道模型",
        "excerpt":"什麼是天線陣列？ 當兩個單獨的天線互相進行訊號傳輸時，我們稱這樣的系統為單輸入單輸出 Single Input Single Output (SISO) 系統。而當我們把天線排成陣列時，接收和傳送端都會有多重的天線，我們稱這樣的系統為多輸入多輸出 Multiple Input Multiple Output (MIMO) 系統。MIMO 系統由於各種增益，可以更有效率的進行傳輸，這也是第四代通訊 (Fourth generation, 4G) 最重要的技術。 單輸入單輸出 (SISO) 通道 當傳送端 (TX) 與接收端 (RX) 都使用單一天線傳輸時，一個複數值可以被用來描述傳送與接收信號間的差異，我們稱這個數值為通道增益。 在一個增益變化較慢的通道中(可參考 Flat Fading)，下面的式子可以用來表示這個系統的概念。其中$y$, $h$, $x$都是複數純量，分別代表著接收信號、通道增益、傳輸信號。 $y=hx$ 多輸入多輸出 (MIMO) 通道 在 MIMO 系統中，TX 與 RX 都有多個天線。在一個 RX 具有 $m$ 個天線、TX 具有 $n$ 個天線的情況下，總共就會有 $m\\times{}n$...","categories": ["無線通訊"],
        "tags": ["通道模型","MIMO","Rayleigh","Rician","毫米波"],
        "url": "/%E7%84%A1%E7%B7%9A%E9%80%9A%E8%A8%8A/wireless_01/",
        "teaser": null
      },{
        "title": "處理通道造成的干擾",
        "excerpt":"在通道模型的文章中，我們介紹了 MIMO 系統的數學模型 $\\mathbf{y}=\\mathbf{H}\\mathbf{x}$。這顯示接收訊號會被通道干擾而失真。那我們該如何從 $\\mathbf{y}$ 去還原 $\\mathbf{x}$ 呢？ 這篇文章會根據訊號處理的位置，大致分為三種狀況：於 TX 端處理、於 RX 端處理、於 TX 和 RX 兩端都進行處理。這三種狀況分別適用在不同的系統以及通道的狀況。 於 TX 端處理：預編碼技術 當訊號處理發生在 TX 端，我們有 $\\mathbf{y}=\\mathbf{H}(\\mathbf{F}\\mathbf{x})$。一個傳統的技術是讓 $F=H^{H}(HH^H)^{-1}$，被稱為 zero-forcing precoding (ZFP) 技術。 然而，在考慮接收端雜訊時，ZFP 並不是一個很好的技術。更多關於預編碼的技巧會在關於預編碼的文章中進行更多討論。 這種型態的處理，通常出現在下行鏈路系統，也就是基地台端 (BS) 傳輸訊號給使用者端 (UE)。運用在這種系統的原因有二。一、BS 端具有比較強的運算能力；二、UE 端是分別接收到訊號，並不能共同的對於訊號進行合併處理。 於 TX 端和 RX 端共同處理：最優預編碼技術 當訊號出理發生在 TX 和 RX 兩端時，我們有 $\\mathbf{y}=\\mathbf{W}(\\mathbf{H}(\\mathbf{F}\\mathbf{x}))$。一個傳統的技術是找出通道的 SVD 分解：...","categories": ["無線通訊"],
        "tags": ["通道","干擾"],
        "url": "/%E7%84%A1%E7%B7%9A%E9%80%9A%E8%A8%8A/wireless_02/",
        "teaser": null
      },{
        "title": "通道特性",
        "excerpt":"在通道模型的文章中，我們介紹了不同的通道模型。這包括 Rayleigh、Rician 及毫米波通道。然而他們之間的不同會如何的影響通訊效能呢？ 在這篇文章中，我們會介紹數種通道的特性，並且針對 Gramian矩陣 $\\mathbf{G}=\\mathbf{H}^H\\mathbf{H}$ 做分析。討論到的特性包括：條件數及通道硬化。此外，我們會特別針對 Rayleigh 和空間相關通道做詳細討論。 矩陣特性如何造成影響？ 條件數 給定 $n\\times{}n$ 的 gramian 矩陣之 SVD 分解(假設對角矩陣 $\\mathbf{S}=diag([s_1\\ s_2\\ \\dots{} s_n])$)。其中的各項 $s_i$ 被稱之為奇異數，並且會由大到小排列。如下圖所示，奇異數的數值概念上就代表了經過處理後的通道增益。更多關於 SVD 分解的原理會在關於最優預編碼進行探討。條件數就是最大和最小的奇異值的比例，定義為 $c=\\frac{s_1}{s_n}$。 當我們在計算gramian矩陣的反矩陣時，會有 $\\mathbf{G}^{-1}=\\mathbf{V}\\mathbf{S}^{-1}\\mathbf{U}^H$，其中 $\\mathbf{S}^{-1}=diag([\\frac{1}{s_1}\\ \\frac{1}{s_2}\\ \\dots{} \\frac{1}{s_n}])$。這顯示當條件數 $c$ 很大時，$\\mathbf{G}^{-1}$ 的數值範圍就會變得很大。當 $m=n$ 時，這種狀況就會造成處理通道造成的干擾文章中提到的 ZFD 和 ZFP 技術的效能降低。 通道硬化 通道硬化的核心概念就是大數法則。當有大量的接收訊號時，整體通道增益就會變得穩定。 當 $n\\gg{}m$ 時，我們可以觀察到 gramian 矩陣的數值會變得穩定，並且對角數值會變得很大。這種特性可以大幅簡化訊號處理的複雜度，也可以大幅增加通訊效率。 實例分析...","categories": ["無線通訊"],
        "tags": ["通道","條件數","通道硬化"],
        "url": "/%E7%84%A1%E7%B7%9A%E9%80%9A%E8%A8%8A/wireless_03/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>書本簡介與前言",
        "excerpt":"書本簡介與前言  先說我會讀這本書的原因。我是很喜歡收集新知的人，我一天會花很多時間在看各種媒體，這包括了 facebook, NY times, Linkedin, IG, Twitter, Dcard, MIT technology review 以及種種不同的媒體。有時候不知道要做什麼的時候，我就會拿出手機滑一下，不知不覺就看了很久。當我在書局看到這本書時，我突然想到是否有一些高效率的閱讀方法，讓我可以節省這些不必要的時間，卻能達到同樣的閱讀效果。   這本書的作者是佐佐木俊尚先生，他是一個記者。他每天會利用零碎時間，掃過一千篇新聞報導，最後再把他認為最重要的十篇文章在推特上和大家分享，並且已經持續了十年以上。他希望可以將它所使用的方法整理在這本書中給大家參考。   我們通常認為要專注才能夠閱讀，然而在這個資訊炸的時代專注是非常困難的。因此，作者認為應該以另一種不同的方式來進行閱讀，也就是利用零碎的時間來快速的收集資訊。此外，他也提供了建議的資料儲存的方式，可以有效的把不同特性的資訊分別儲存在電腦和大腦中。這可以增加大腦中靈光一閃的機率。關於資料儲存這方面我非常認同，這也是我自己一直以來實行的方式。我會把概念和結構化的資訊儲存在大腦，並把詳細的文件都整理在電腦中。   這本書的章節分別是： 序章：基礎認識，現代知識生產的五大前提     找出陷阱，選擇該讀的內容   網路上該看什麼   如何利用社群網站   如何閱讀、整理與保存選中的文章   要讀什麼書，該怎麼讀   分別用兩種保存方式，是活用知識和資訊的關鍵   藉由二刀流，讓大腦保持乾淨狀態   活用散漫力，達成多任務處理的秘訣  ","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_00/",
        "teaser": null
      },{
        "title": "LASSO與壓縮感知",
        "excerpt":"今天同學問了一個最佳化的問題： 給定三個點 $x_1=2,y_1=1,x_2=3,y_2=0,x_3=-2,y_3=2$ 求 $min_{\\mathbf{w}}{\\frac{1}{3}\\sum_i(w_0+w_1x_i-y_i)^2+|\\mathbf{w}|_1}$ 這讓我想到之前看過某個印度教授講述關於 LASSO regression 和壓縮感知 (Compressive Sensing) 的影片。下面的式子可以用來統一描述這些問題： $min_{\\mathbf{w}}{f(\\mathbf{w})}, |\\mathbf{w}|_l&lt;=t$ 其中 $f(\\mathbf{w})$ 通常假設是凸函數，$|\\mathbf{w}|_l$ 是 $l$ norm，例如 $l_2$ 就是常見的歐式距離，$l_1$ 就是全部的絕對值之和，而 $l_0$ 的定義比較特別，是指說 $\\mathbf{w}$ 有幾個非零的數值。 壓縮感知 當我們使用 $l_0$ 時，上面的問題就會是一個壓縮感知的問題。常見的形式為 $min_{\\mathbf{w}}{|\\mathbf{A}\\mathbf{w}-\\mathbf{y}|^2}, |\\mathbf{w}|_0&lt;=t$。$\\mathbf{y}$ 通常描述的是要復原的訊號，$\\mathbf{A}$ 是常見的所有基底訊號。一個應用是：$\\mathbf{y}$ 描述腦內結構完整的3D結構圖，$\\mathbf{A}$ 是所有核磁共振拍攝角度的圖片。如果我們要以最少的拍照次數來復原大腦的結構圖，這會對應到解一個最小化 $|\\mathbf{w}|_0$ 的問題。除此之外，壓縮感知近年來也已經被大量的使用在各個領域。 LASSO 和壓縮感知的圖像化 如果給定函數 $f(\\mathbf{w})$ 的等高面，下圖呈現的是 $l$ norm 不同時地狀況。可以觀察到當使用 $l_0$ 時，這個限制邊界就會凹線，在這樣的情況下，這個問題就會變得非常的難(不是凸函數)。也因此，Basic pursuit...","categories": ["數學"],
        "tags": ["LASSO","壓縮感知","凸函數最佳化"],
        "url": "/%E6%95%B8%E5%AD%B8/math_00/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>序章、閱讀的目的",
        "excerpt":"序章提出了五大前提，分別是 (1) 媒體的種類 (2) 獲取觀點的三步驟 (3) 閱讀的目的 (4) 如何由閱讀獲取知識 (5) 何時何地適合閱讀 這可以看做是整本書的大綱，在後面的章節中作者也有更深入的解釋。 媒體的種類 關於媒體分類，作者依據兩個面向：(1) 水平或垂直媒體：前者代表淺而廣的報導、後者則有深入的探討 (2) 中立、偏頗。分別劃分為4類媒體：   水平 垂直 中立 A 類：新聞APP、通信社 B 類：部落格、專業雜誌 偏頗 C 類：新聞報導、談話性節目 D 類：陰謀論 獲得觀點的三步驟 利用 A 類媒體，獲得新聞的輪廓：以水平媒體快速的掃描過一天中所有的新聞。後面章節作者也有提到一些技巧(如使用 RSS 閱讀器等)，來強化我們對於各個新聞標題的中立立場。 利用 B 類媒體，獲得不同的觀點：從 A 類媒體挑選出來感興趣的文章，我們可以在 B 類媒體上搜尋相關的資源閱讀，這可以獲得更深入的了解。 獲得新聞的全貌：當我們有一個深入了解後，可以看 C 類媒體，進而掌握多元角度。 閱讀的目的 閱讀的目的就是掌握多元觀點。一件事情絕對不會只有一個面向、一個觀點，如果我們越能夠增加我們的觀點數量、獲得不同的新觀點、那麼就能夠增進自己對於理解這件事的廣度與深度。 這讓我想到馬薇薇在奇葩說第一季半決賽所講過的話，比較難的那個持方，不符合社會主流價值觀的持方，他存在的意義是在讓你知道，這個世界的少數派有他的不得已。交鋒可以帶來多元。我想這也是辯論的目的， 只有對知保持謙卑，人們才有可能容得下多元的觀點。...","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_01/",
        "teaser": null
      },{
        "title": "關於預編碼 (ZF、MRT、RZF)",
        "excerpt":"在處理通道造成的干擾中我們有介紹過預編碼 (Precoding) 是在 TX 端運行的演算法，目的在於考量傳輸過程會造成的干擾下，對訊號進行預先處理。通常這樣的技術會用在基地台 (BS) 端。 以數學模型來描述會是，給定傳輸訊號 $\\mathbf{x}$，和已知的通道干擾 $\\mathbf{H}$，我們希望找到一個預先處理方式 $\\mathbf{F}$，使得接收訊號 $\\mathbf{y}=\\mathbf{H}(\\mathbf{F}\\mathbf{x})+\\mathbf{n}$ 可以盡可能的接近 $\\mathbf{x}$。 常見技術 (ZF、MRT、RZF) 這邊要介紹的技術包括 zero-forcing (ZF)、maximum ratio transmission (MRT)、regularied zero-forcing (RZF)。我們在之後的建設性干擾預編碼文章中也會介紹 2021 年較受到關注的 constructive interference precoding (CIP)，以及 vector perturbation (VP) 和 tomlison-tarashima precoding (THP) 這些比較複雜的預編碼技術。這些技術背後的概念都大不相同，下面我們會依序進行介紹。 ZF 預編碼 ZF 的概念很簡單，就是把 $\\mathbf{F}$ 取為 $H^{H}(HH^H)^{-1}$ 這個 pseudo inverse矩陣。如此一來就有 $\\mathbf{y}=\\mathbf{x}+\\mathbf{n}$。如果當雜訊很小時，ZF會是一個效能很好的技術，但當我們利用訊號對干擾與雜訊比 (signal-to-interference-and-noise...","categories": ["無線通訊"],
        "tags": ["預編碼","ZF","MRT","RZF"],
        "url": "/%E7%84%A1%E7%B7%9A%E9%80%9A%E8%A8%8A/wireless_04/",
        "teaser": null
      },{
        "title": "IC設計: Blog簡介",
        "excerpt":"這篇文章將會簡介當看到一個硬體 spec 時，怎麼去設計在這個條件下進行最優化的 RTL。我會以之前參加 TSRI 舉辦的 IC 競賽為例進行說明。後續我也規劃分享一些進階的硬體設計知識。 如何優化硬體的 PPA 一般常見的評分標準會有(時間、面積、功耗分別簡稱為 T、A、P 值)： 特定 T 值下，最小化 A 值 特定 T 值下，最小化 AT 值 特定 A 值下，最小化 P 值 另外還有很多種不同的評分標準。對於這些不同的標準，他可以考驗我們對於硬體的認知。不同的評分標準會對應到架構很不同的設計，我們必須很了解時間、功耗、面積 (Performance, Power, Area; PPA) 三個面向上的取捨。 特定 T 下，最優化 A 的文章中特別介紹：特定 T 下，A 最小 特定 T 下，最優化 AT 的文章中特別介紹：特定 T 下，AT 最小...","categories": ["IC設計"],
        "tags": ["IC設計","IC競賽","架構","架構優化"],
        "url": "/ic%E8%A8%AD%E8%A8%88/ICD_00/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>第一章、選擇該讀的內容",
        "excerpt":"作者在本章節的寫法是逐點列舉關於閱讀內容的小知識。由於我覺得這些小知識沒有很好的整理，並不適合閱讀，這邊把書中的內容做揀選和整理成以下兩點。   判別偏頗媒體  以下幾個方法可以判斷觀點偏頗的媒體     對事件的描述過於簡單，喜歡把話說死   把某人當成壞人，煽動對立情緒   注意文章裡是否出現，需要留心的關鍵字 (真實/真面目/懦弱/撒謊/假面具)   新聞來源不明   文章裡出現”擺明就是陰謀論”的內容   遠離資訊斷裂  由於現在媒體上充斥著大量資訊，通常我們會看到的資訊都是由在社群網站上所建立的人脈網路有關，演算法也會根據我們所看到的內容推薦，這就會導致資訊斷裂。並且另類事實 (alternative facts)、後真相 (post-truth) 和回聲室效應正在不斷的擴大資訊的斷裂。      另類事實的起源是川普在選統統時的演說，說謊有時候也是權衡之際，這就是一種另類事實。   後真相是指，在一個輿論形成時，訴諸情或個人信仰的言論，有時往往比客觀事實更具有影響力。真相到底為何可能易點都不正要，只要符合自己的向養的言論都好。   回聲室效應是指當我們在一個相同理念或信仰的群體時，會更傾向於跟著別人唱和，而很難放棄原本的觀點。我們應該要學著離開環境，用冷靜、客觀的態度來吸收多元資訊。   ","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_02/",
        "teaser": null
      },{
        "title": "關於最優預編碼",
        "excerpt":"首先說明最優預編碼是我自己創造的名詞，一般來說我們會稱作奇異值分解預編碼 (SVD-based Precoding)。我們在通道特性的文章中有提過關於條件數和奇異值的概念，這篇文章會做更深入的解釋，並解釋她的物理意義。 奇異值分解 奇異值分解的定義是，給定 $n\\times{}n$ 的矩陣 $\\mathbf{H}$，她的 SVD 分解是 $\\mathbf{H}=\\mathbf{U}\\mathbf{S}\\mathbf{V}^H$，其中 $\\mathbf{U}$ 和 $\\mathbf{V}$ 都具有正交矩陣的特性 (也就是該矩陣的列向量彼此之間是正交的)，而 $\\mathbf{S}$ 是一個對角矩陣。 接下來說明什麼是正交。用一個 $2\\times{}2$ 的矩陣 $\\mathbf{H}=[\\mathbf{h}_1\\ \\mathbf{h}_2]$ 為例。正交就表示 $\\mathbf{h}_2^H\\mathbf{h}_1$ 都是 0。如此一來如果我們要傳輸兩個訊號 $s_1$ 和 $s_2$，接收到的訊號會是 $r=\\mathbf{h}_1s_1+\\mathbf{h}_2s_2$ ，她雖然混和著兩個訊號，但由於兩個通道間的正交特性，這兩個訊號可以被很好的分別開來。例如要取得 $s_1$ 只需要計算 $\\mathbf{h_1}^Hr$ 即可。這邊聽起來就是以數學的觀點去描述我們整麼把一個通道經過處理，使得所有的通道之間彼此都是正交的。接下來，我們介紹她背後的物理意義。 奇異值分解與預編碼的關聯 陣列響應 (array response) 首先，我想先介紹陣列響應的概念。對於一個有 $n$ 跟天線的收發器來說，我們會定義她的基本陣列響應：$\\mathbf{a}(\\theta)=[1\\ e^{-j\\theta}\\ e^{-2j\\theta}\\ …\\ e^{-(n-1)j\\theta}]$。基本陣列響應是一個 $\\theta$ 的函數，她的意義就是這個陣列訊號輻射的方向。以下圖為例，紅色和藍色兩個不同的響應分別瞄準了 40...","categories": ["無線通訊"],
        "tags": ["最優預編碼","奇異值分解"],
        "url": "/%E7%84%A1%E7%B7%9A%E9%80%9A%E8%A8%8A/wireless_05/",
        "teaser": null
      },{
        "title": "T 值估計",
        "excerpt":"這邊文章會介紹 T 值的估計。一般 T 值表示從開始輸入訊號的時間到運算結果全部輸出所需的總時長，我們將它記為 $t_{all}$。而這個時間又可以被表示為 $t_{all}=n\\times{}t_{period}$，其中 $n$ 就是所需要的總 cycle 數，而 $t_{period}$ 是一個週期的長度。大部分的人對於 $n$ 的估計相當熟悉，也可以設計好的方法來優化它。然而，大部分的人會忽略了 $t_{period}$ 的重要性。 優化總週期數 $n$ 與 $t_{period}$ 由於我們都會需要時間讀取資料，而這段時間又佔大部分的時間，因此對於優化 datapath 上的周期數通常就沒有那麼重要。例如，現在要讀取 500 個資料點，你需要對每 15 個點的總和輸出。這種情況最簡單的就是做一個有 15 個數值的加法器 (如下圖)。 然而，如果我們可以做 pipeline 成下面的電路，輸出時間只多了一個 cycle，這對於 $n$ 的影響的微乎其微。但是，在這個架構下，我們的 $t_{period}$ 就會因為 critical path 變短而變小。整體而言 $t_{all}$ 就能有很可觀的減少。 當然，在這個架構中，我們因為以下原因需要付出額外的 A 值做為代價 需要使用額外的 register 加法器會由於被...","categories": ["IC設計"],
        "tags": ["IC設計","IC競賽","運行時間","操作頻率"],
        "url": "/ic%E8%A8%AD%E8%A8%88/ICD_01/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>第二章、如何有效的蒐集好的資訊",
        "excerpt":"由於我們日常生活被動接收的資訊量很大，而且好的資訊得成分很少。因此，我們需要自己主動蒐集的資訊。作者在這個章節中分享了幾個他常用的技巧。 透過 RSS Reader 自己蒐集資訊 RSS reader 是一個可以單純蒐集網頁中的資訊的閱讀軟體，它會把不必要的廣告都去掉。例如下圖是我嘗試使用 feedly 這個軟體的結果，我選擇讀取 MIT technology review 和 daily search 的 RSS，這個 reader 就會過濾廣告後把結果顯示在這邊。 額外的功能有： 可以把不同的網站分到不同類別 可以變更卡片模式 (上圖的例子)、純標題模式 (只有標題) 由於我試用過 Linkedin 這種需要登入的帳號都無法收入到 RSS reader 中，而平常我最常用為蒐集資料的就是 Linkedin，因此我並沒有繼續使用。如果有讀者熟悉或研究出來可以寄信和我討論。 另外，我覺得一個好的做法是訂閱你想看的雜誌內容，這樣他就會定期寄信到你的信箱。例如，我有訂閱 MIT Technology review 那他就會每天寄信到我的信箱 (下圖)。我覺得這個功能對於一般人來說就很足夠了。 把文章分成三個類別 作者根據自己經驗將媒體分為三級 (下表)，並根據時間來分配需要閱讀的內容。 分級 動作 作者提供的例子 一 只要看標題 策展、政治、經濟、社會、商業、媒體、個人部落格、科技 二 忙就可以跳過 新聞、英語、生活、電影、書籍...","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_03/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>第三章、如何使用社群軟體蒐集知識",
        "excerpt":"五階段蒐集推特上的資訊  作者認為社群網站是最重要的資訊來源，他分享了五階段蒐集法。                  步驟       說明                       檢視該篇文章在推特上如何被評論       批評多不見得不好                 在評論中，有無該領域專家的意見       可用有無專業術語來初步判斷，可利用專業網站的資訊擷取專業術語為關鍵字                 這些發表評論的人，背景為何       例如：謙虛的人可能會說，我是醫生但不是傳染病專家                 發表評論的人使用的語言是否妥當       文字是否冷靜客觀，通常不會用斷定的口氣                 將通過前 4 項的人納入追蹤       做為值得信賴的評論           如此一來，我們可以在不同的領域都建立值得信賴的名單，就可以快速的蒐集知識。   持續更動信賴名單  作者一再強調：原本風評很好的專家，也不表示我們就能一直信賴下去。我們不能只關注特定時間點，應該要順著時間軸做觀察這個人的好壞。即使是好人也有可能變為壞人，而好人也可能會變為好人。我覺得這點是很重要的，很多人常因為過度信任一個人而被牽著鼻子走。不管在任何時間點，我們都需要有更多的資料來進行客觀的判斷。  ","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_04/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>第四&五章、閱讀的方式",
        "excerpt":"閱讀的重要性在於：一本書已經具備有概要與觀點的整體的流程，因此書可以帶來多元的視角。   電子書與紙本書  作者推薦電子書，因為有以下的優點     買書不具備空間問題   可以試閱   可以搜尋文章   可以複製內容(Kindle)，並永久保存   可以放大   不會因為書厚而有抗拒趕   比較便宜 (甚至有訂閱方案)   作者只會買”只出紙本書的書”。另外，他也會控制書的總量。例如，每個月底盤點並不使總量超過2000本，超過就清掉。即便他如此推從電子書，他也認為逛書店非常的重要。好的書店通常在書籍的擺設上會有他的脈絡。例如：在養貓的方法旁邊放有關貓的小說，可能會比放養其他寵物的書還要好。   如何挑選現在應該讀的書？  作者提出了以下五種方式：     看看書和自己是否契合   認識自己的閱讀能力到什麼程度   先試閱30頁   放棄不適合自己的   先讀讓自己開心的書   閱讀的方式  作者提到以下三種閱讀方式     用便利貼或螢光標示有趣的內容   把重要的內容整理再筆記軟體   為吸引自己的內容留下一小段紀錄(寫下感受) 這邊的第三點最為有趣。例如你可以寫下：   這裡看到的和再某書看到的一樣   這和某報導好像有關連   這就是xxx嗎 等等當下的感受。我原先沒有這樣的習慣，但我認為這會是非常實用的作法。因為我們的記憶分為語意記憶與情節記憶。當我們寫下對文章的心得後，我會由於情節記憶而不容易忘記他的內容。在下個文章中，我們會討論如何記憶和紀錄我們閱讀的知識，在那邊我們也會看到利用感受來記憶的重要性。   閱讀的時間  作者提到閱讀的時間應該要有彈性，不要特別安排一個時間，否則很容易因為心情或其他事情而被被限縮。不過我個人還是習慣排定固定時間，並且遵照著排定好的行程進行閱讀。這可能和個人的習慣養成程度會有關聯。在未來，我也會分享更多關於習慣的書籍，期望各位也可以將閱讀變成一種習慣。   如何閱讀不同類型的書籍  閱讀名著  名著通常很難入手，因此我們可以先     Google 相關文章(歷史)或書評   Amazon 上看相關書評   購買平易近人的入門書   看相關漫畫或電影 雖然閱讀名著難，但是非常重要！如果把他看懂，我們可以很好的訓練多元視角。   閱讀實用書籍  閱讀實用書籍時，我們要的是吸收散落的知識片段(例如這本書就是一本實用性書籍)。好的做法是先瀏覽書目並挑選自己想要閱讀的章節。   ","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_05/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>第六章、兩種保存方式：頭腦與電腦的搭配",
        "excerpt":"電腦與人腦的優點  電腦的優點在於：     儲存空間很大，可以儲存所有資料。   利用關鍵字或標籤，可以輕易的搜尋 人腦的優點在於：   適合形成概念與創造概念   具體做法  電腦的部分作者常使用 Pocket 和 notion。不過我個人比較常用的是 onenote 以及自己寫的網頁。而關於概念的部分，作者提出可以建立一個只蒐集概念的概念清單。當我們在瀏覽概念清單可以讓自己清楚的回憶起，已經提取出來的概念。而當我們累積的概念越來越多，且彼此間足夠互產生聯集，我們就有能力勾勒出屬於自己的世界。   個人對於這個做法的感想  我非常認同做這的做法，這也是我一直以來實行的概念。對於比較具有創意的人，我認為大腦應該單純的保留概念，細部的資訊就可以保存在電腦中。就以這本書來說好了，作者在書中有一段實例描述他如何使用電腦和人腦的搭配，來想出”罪與罰”與”一百分的名著”的關聯。在看完之後，我的感覺是”這個舉例太棒了”，我會用大腦記住”這是很棒的例子”與”罪與罰”，並在電腦中紀錄這段例子。如此，之後我想翻的時候，只要在電腦上搜尋罪與罰就能輕易的找到。而對於大腦來說，我只需要記住”電腦與人腦需要互相搭配”，如此一來我就更可能在未來把這個概念與其他概念互相融合。   這樣概念的結合來自於無意識領域。無意識領域和自我意識不戶相干涉，他會無預警地讓不同的資訊發生衝突，使新的觀點從天而降般湧現出來。還會突然出現像是”對喔原來 A 就是 F 阿”，這樣的靈光乍現。保存在腦中大量的概念，會在人們接觸到某些新聞、事件或是思考時，讓我們突然回想起來 然後再藉由概念之間的相互混合，進一步孕育出我們的世界觀。我想各位如果有看過我之前的文章：閱讀力最新技術大全：序章、閱讀的目的就可以領略到。   當然，我想強調的是，這個方法並不適用於每一個人。我認為如果你是一個有創意的人應該更能掌握這樣的做法。   ","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書","創意"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_06/",
        "teaser": null
      },{
        "title": "閱讀力最新技術大全 <br>第八章、多任務處理與時間管理",
        "excerpt":"多任務處理 我之前看書也常看到有人提唱不要進行多任務處理 (multi tasking)，不過我自己還是習慣使用。我認為這能讓我更好的控制心神，也更好的產生出有創意的想法。我認為你能不能進行 multi tasking 取決與你分配自己精力和資源的能力，當你越有能力掌控與預測自己對於資源的消耗，你就越能做到。否則大腦將會變得一團亂，只會造成反效果。 我原先 multi tasking 的做法在於培養固定的習慣。我會把每天的某段時間留給固定的事物。例如：早上七到八點進行：素描、冥想或是文章整理。我會把這些習慣組成群組的原因在於，如果排定單一工作而完全沒有彈性，容易因為當下心情而無法維持原先的計畫。當我讀到作者提出的重的工作搭配輕的工作時，我認為這是一個比較有系統性的作法。我也開始在原先的習慣群組中分配不同類型的工作，讓我的心神更好的被自己掌握。 重的工作和輕的工作 對於作者來說，他的輕重工作分別如下： 重的工作 (容易積累疲勞，使我們達到臨界點)： 1. 閱讀重的文章 2. 閱讀重的書 3. 把想到的點子轉化為文字 4. 構思文章的組成方式 5. 重的執筆 6. 重的雜物 輕的工作： 1. 檢視新聞標題，把要讀的文章收到pocket 2. 閱讀輕的文章 3. 觀看影片 4. 閱讀輕的書 5. 寫讀書筆記並存檔 6. 透過天馬行空的思考，讓點子在腦內成形 7. 為文字搭配上視覺元素 8. 對文字內容進行調整 9. 輕執筆 10. 輕雜物(製作請款單、收發郵件…) 11. 喘口氣...","categories": ["書籍分享"],
        "tags": ["閱讀力最新技術大全","日本書","時間管理"],
        "url": "/%E6%9B%B8%E7%B1%8D%E5%88%86%E4%BA%AB/reading-skill_07/",
        "teaser": null
      }]
